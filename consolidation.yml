---
- name: consolidate the layer 3 network
  hosts: network
  vars_files:
    - vars/consolidation-data.yml

  # This playbook illustrates how effective with_dict is as opposed to 
  # the expansion.yml playbook

  tasks:
  - name: configure interface descriptions 
    vyos_interface:
      name: "{{ item.key }}"
      description: "{{ item.value.description }}" 
    with_dict: "{{ interface_data[inventory_hostname] }}" 
    when: ansible_network_os == 'vyos'

  # the following task does not appear to work...
#  - name: configure layer 3 
#    vyos_l3_interfaces:
#      config: "{{ layer3_data[inventory_hostname] }}"
#      state: replaced
#    when: ansible_network_os == 'vyos'
#    tags: vyos_l3

# the following is just a workaround but still idempotent!...
# note that the vyos_config alternative is NOT idempotent!!
#
  - name: configure layer3 (alternative)
    vyos_command:
      commands:
        - configure
        - "set interfaces ethernet {{ item.name }} address {{ item.ipv4 }}"
        - commit
        - save
    when: item.name != 'lo' and ansible_network_os == 'vyos'
    loop: "{{  layer3_data[inventory_hostname] }}"
    tags: vyos_l3

  - name: configure layer3 (alternative) for loopback interface
    vyos_command:
      commands:
        - configure
        - "set interfaces loopback {{ item.name }} address {{ item.ipv4 }}"
        - commit
        - save
    when: item.name == 'lo' and ansible_network_os == 'vyos'
    loop: "{{  layer3_data[inventory_hostname] }}"
    tags: vyos_l3

  - name: configure interface descriptions 
    ios_interface:
      name: "{{ item.key }}"
      description: "{{ item.value.description }}" 
    with_dict: "{{ interface_data[inventory_hostname] }}" 
    when: ansible_network_os == 'ios'

  - name: configure layer 3 
    ios_l3_interface:
      aggregate: "{{ layer3_data[inventory_hostname] }}" 
    when: ansible_network_os == 'ios'


